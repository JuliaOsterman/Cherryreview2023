##### packages ############
library(tidyr) 
library (ggplot2)
library(dplyr)
library(tidyverse)
library(lmerTest)
library(lme4)
library(car)
library(cowplot)
###########################



##### PL limitation #######
#call dataset
#pldata <- read.csv(file.choose(), header=T, sep=';', dec='.', stringsAsFactors=T)
pldata <- read_excel("PL.xlsx")
attach(pldata)
str(pldata)

#ggplot

plplot <- 
ggplot(data=pldata, aes(y = PL_graph, x = crop)) +
  geom_hline(yintercept=0, linetype="dashed", color = "grey20")+
  geom_point(data=pldata, aes(y = PL_graph, x = crop,  col = crop), alpha = 0.5, size=2.5,
             position = position_jitterdodge(jitter.width = 0.35), stroke = 0) +
  stat_summary(fun.min = function(z) { mean(z) - (sd(z)/sqrt(length(z))) },
               fun.max = function(z) { mean(z) + (sd(z)/sqrt(length(z))) },
               fun = mean, size = 0.4,
               col = "black", position = position_dodge(width = 0.5)) +
  ylab("Pollen limitation (%)\n")+
  xlab("\n Crop")+
  ylim (-100,100)+
  theme_classic()+
  scale_color_manual(values=c("darkorange", "red4")) +
  theme(legend.position="none", axis.text.x = element_text(angle = 0, hjust=0.5))+
  scale_x_discrete(limits = c ("Sweet cherry", "Sour cherry"))
  #scale_y_continuous(breaks = c(0, 20, 40, 60, 80, 100))

#save plot alone, to save in panel take # from #plplot (above before ggplot code)
ggsave("Pollen limitation.png", width = 2.5, height = 3.5, dpi = 300)

#models
plmodel <- lmer(PL ~ -1 + crop + (1|study), data=pldata)
summary(plmodel)
anova(plmodel)

plmodel2 <- lmer(PL ~ crop + (1|study), data=pldata)
summary(plmodel2)
anova(plmodel2)
###########################



##### Poll. contrib. ######
#call dataset
#pcdata <- read.csv(file.choose(), header=T, sep=';', dec='.', stringsAsFactors=T)
pcdata <- read_excel("pollS.xlsx")
attach(pcdata)
str(pcdata)

#ggplot

pcplot  <-
ggplot(data=pcdata, aes(y = poll_service, x = crop)) +
  geom_point(data=pcdata, aes(y = poll_service, x = crop,  col = crop), alpha = 0.5, size=2.5,
             position = position_jitterdodge(jitter.width = 0.35), stroke = 0) +
  stat_summary(fun.min = function(z) { mean(z) - (sd(z)/sqrt(length(z))) },
               fun.max = function(z) { mean(z) + (sd(z)/sqrt(length(z))) },
               fun = mean, size = 0.4,
               col = "black", position = position_dodge(width = 0.5)) +
  ylab("Pollination service (%)")+
  xlab("\n Crop")+
  ylim (0,100)+
  theme_classic()+
  scale_color_manual(values=c("darkorange", "red4")) +
  theme(legend.position="none", axis.text.x = element_text(angle = 0, hjust=0.5))+
  scale_x_discrete(limits = c ("Sweet cherry", "Sour cherry"))
  #scale_y_continuous(labels = c(0, 20, 40, 60, 80))

#save plotalone, to save in panel take # from #pcplot (above before ggplot code)
ggsave("Pollination_service.png", width = 2.5, height = 3.5, dpi = 300)

#models
pcmodel <- lmer(poll_service ~ -1 + crop + (1|study), data=pcdata)
summary(pcmodel)
anova(pcmodel)

pcmodel <- lmer(poll_service ~ crop + (1|study), data=pcdata)
summary(pcmodel)
anova(pcmodel)
###########################



##### Fruit set ###########
#call dataset
#fsdata <- read.csv(file.choose(), header=T, sep=';', dec='.', stringsAsFactors=T)
fsdata <- read_excel("fruit set.xlsx")
attach(fsdata)
str(fsdata)

#ggplot

fsplot <-
ggplot(data=fsdata, aes(y=fs, x=crop)) +
  geom_point(data = fsdata, aes(y=fs, x=crop,  col=crop), alpha = 0.5, size=2.5,
             position = position_jitterdodge(jitter.width = 0.35), stroke = 0) +
  stat_summary(fun.min = function(z) { mean(z) - (sd(z)/sqrt(length(z))) },
               fun.max = function(z) { mean(z) + (sd(z)/sqrt(length(z))) },
               fun = mean, size = 0.4,
               col = "black", position = position_dodge(width = 0.55)) +
  ylab("Open fruit set (%)\n")+
  xlab("\n Crop")+
  ylim (0,100)+
  theme_classic()+
  scale_color_manual(values=c("darkorange", "red4")) +
  theme(legend.position="none", axis.text.x = element_text(angle = 0, hjust=0.5))+
  scale_x_discrete(limits = c ("Sweet cherry", "Sour cherry"))
  #scale_y_continuous(labels = c(0, 20, 40, 60, 80))

#save plot alone, to save in panel take # from #fsplot (above before ggplot code)
ggsave("Fruit set.png", width = 2.5, height = 3.5, dpi = 300)

#model
fsmodel <- lmer(fs ~ crop + (1|study), data=fsdata)
summary(fsmodel)
anova(fsmodel)

fsmodel <- lmer(fs ~ 0 + crop + (1|study), data=fsdata)
summary(fsmodel)
anova(fsmodel)
###########################



#### panel construct. #####
#fsplot, pcplot, plplot are the three graphs created above

plot_grid(fsplot, pcplot, plplot, labels = c('A', 'B', 'C'),  ncol = 3)
ggsave("CSPanel.png", width = 7.5, height = 3.5, dpi = 300)
###########################
